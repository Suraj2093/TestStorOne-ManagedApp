{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The name of your Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "password or SSH Key for the Virtual Machine."
      }
    },
    "virtualNetworkNewOrExisting": {
      "defaultValue": "new",
      "type": "String",
      "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned."
        }
    },
    "virtualNetworkName": {
      "defaultValue": "VirtualNetwork",
      "type": "String",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "addressPrefixes": {
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "type": "Array",
      "metadata": {
        "description": "Address prefix of the virtual network"
      }
    },
    "subnetName": {
      "defaultValue": "default",
      "type": "String",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetPrefix": {
      "defaultValue": "10.0.0.0/24",
      "type": "String",
      "metadata": {
        "description": "Subnet prefix of the virtual network"
      }
    },
    "virtualNetworkResourceGroupName": {
      "defaultValue": "[resourceGroup().name]",
      "type": "String",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "VmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "dataDiskSku": {
      "type": "string",
      "defaultValue": "StandardSSD_LRS",
      "allowedValues": [
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Select the Mandatory Data Disk SKU"
      }
    },
    "dataDiskSize": {
      "type": "String",
      "allowedValues": [
        "4",
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the Mandatory Data Disk in GB"
      }
    },
    "numberOfDisks": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of Data Disks to deploy, this Managed application needs atleast 1 disk."
      }
    },
    "additionalDataDisk": {
      "defaultValue": "No",
      "allowedValues": [
        "No",
        "Yes"
      ],
      "type": "String",
      "metadata": {
        "description": "Capture serial console outputs and screenshots of the VMSS instance running on a host to help diagnose startup issues"
      }
    },
    "additionalDataDiskSku": {
      "type": "array",
      "defaultValue": ["Standard_LRS"],
      "metadata": {
        "description": "Select the additional Data Disk SKU"
      }
    },
    "additionalSHDDDataDiskSize": {
      "type": "String",
      "defaultValue": "32",
      "allowedValues": [
        "4",
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the additional Standard HDD Data Disk in GB"
      }
    },
    "additionalNumberOfSHDDDisks": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of additional Standard HDD Data Disks to deploy"
      }
    },
    "additionalSSSDDataDiskSize": {
      "type": "String",
      "defaultValue": "32",
      "allowedValues": [
        "4",
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the additional Standard SSD Data Disk in GB"
      }
    },
    "additionalNumberOfSSSDDisks": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of additional Standard SSD Data Disks to deploy"
      }
    },
    "additionalPSSDDataDiskSize": {
      "type": "String",
      "defaultValue": "32",
      "allowedValues": [
        "4",
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the additional Premium SSD Data Disk in GB"
      }
    },
    "additionalNumberOfPSSDDisks": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of additional Premium SSD Data Disks to deploy"
      }
    },
    "additionalUltraDataDiskSize": {
      "type": "String",
      "defaultValue": "32",
      "allowedValues": [
        "4",
        "8",
        "16",
        "32",
        "64",
        "128",
        "256",
        "512",
        "1024",
        "2048",
        "4096",
        "8192",
        "16384",
        "32767"
      ],
      "metadata": {
        "description": "Select the size of the additional Ultra Data Disk in GB"
      }
    },
    "additionalNumberOfUltraDisks": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Number of additional Ultra Data Disks to deploy"
      }
    }
  },
  "variables": {
    "s1relay": "[base64('s1manager-eastus2-tst.onestor.com')]",
    "publicIpAddressName": "[concat(parameters('vmName'), 'PublicIP' )]",
    "dnsLabelPrefix": "[toLower(concat(parameters('vmName'), uniqueString(resourceGroup().id)))]",
    "networkInterfaceName": "[concat(parameters('vmName'),'NetInt')]",
    "networkSecurityGroupName": "[concat(parameters('vmName'),'-nsg')]",
    "osDiskType": "Standard_LRS",
    "standardHDDCheck" : "[and(equals(parameters('additionalDataDisk'), 'Yes'), contains(parameters('additionalDataDiskSku'), 'Standard_LRS'))]",
    "standardSSDCheck" : "[and(equals(parameters('additionalDataDisk'), 'Yes'), contains(parameters('additionalDataDiskSku'), 'StandardSSD_LRS'))]",
    "premiumSSDCheck" : "[and(equals(parameters('additionalDataDisk'), 'Yes'), contains(parameters('additionalDataDiskSku'), 'Premium_LRS'))]",
    "ultraDiskCheck" : "[and(equals(parameters('additionalDataDisk'), 'Yes'), contains(parameters('additionalDataDiskSku'), 'UltraSSD_LRS'))]",
    "intDataDiskSize": "[int(parameters('dataDiskSize'))]",
    "intNumberOfDisks": "[int(parameters('NumberOfDisks'))]",
    "intadditionalSHDDDataDiskSize": "[int(parameters('additionalSHDDDataDiskSize'))]",
    "intadditionalNumberOfSHDDDisks": "[if(equals(variables('standardHDDCheck'), bool('true')), int(parameters('additionalNumberOfSHDDDisks')), 0)]",
    "intadditionalSSSDDataDiskSize": "[int(parameters('additionalSSSDDataDiskSize'))]",
    "intadditionalNumberOfSSSDDisks": "[if(equals(variables('standardSSDCheck'), bool('true')), int(parameters('additionalNumberOfSSSDDisks')), 0)]",
    "intadditionalPSSDDataDiskSize": "[int(parameters('additionalPSSDDataDiskSize'))]",
    "intadditionalNumberOfPSSDDisks": "[if(equals(variables('premiumSSDCheck'), bool('true')), int(parameters('additionalNumberOfPSSDDisks')), 0)]",
    "intadditionalUltraDataDiskSize": "[int(parameters('additionalUltraDataDiskSize'))]",
    "intadditionalNumberOfUltraDisks": "[if(equals(variables('ultraDiskCheck'), bool('true')), int(parameters('additionalNumberOfUltraDisks')), 0)]",
    "totalDataDisks1": "[add(variables('intNumberOfDisks'), variables('intadditionalNumberOfSHDDDisks'))]",
    "totalDataDisks2": "[add(variables('totalDataDisks1'), variables('intadditionalNumberOfSSSDDisks'))]",
    "totalDataDisks3": "[add(variables('totalDataDisks2'), variables('intadditionalNumberOfPSSDDisks'))]",
    "totalDataDisks": "[add(variables('totalDataDisks3'), variables('intadditionalNumberOfUltraDisks'))]",
    "zone": "1",
    "diskIOPSReadWriteMap": {
        "4": 500,
        "8": 500,
        "16": 500,
        "32": 500,
        "64": 500,
        "128": 500,
        "256": 500,
        "512": 1000,
        "1024": 1500,
        "2048": 2500,
        "4096": 5000,
        "8192": 8500,
        "16384": 17000,
        "32767": 35000
    },
    "diskIOPSReadWrite": "[variables('diskIOPSReadWriteMap')[parameters('additionalUltraDataDiskSize')]]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('networkSecurityGroupName')]",
        "[parameters('virtualNetworkName')]",
        "[variables('publicIpAddressName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[if(equals(parameters('virtualNetworkNewOrExisting'),'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName')), resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName')))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "HTTPS-Inbound",
            "properties": {
              "priority": 1010,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "HTTP-Inbound",
            "properties": {
              "priority": 1020,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80"
            }
          },
          {
            "name": "HTTPS-Outbound",
            "properties": {
              "priority": 1030,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "HTTP-Outbound",
            "properties": {
              "priority": 1040,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80"
            }
          },
          {
            "name": "Port_18022",
            "properties": {
              "priority": 1050,
              "protocol": "*",
              "access": "Allow",
              "direction": "Outbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "18022"
            }
          }
        ]
      }
    },
    {
      "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "subnets": [
        {
          "name": "[parameters('subnetName')]",
          "properties": {
          "addressPrefix": "[parameters('subnetPrefix')]",
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled"
          }
        }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIpAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "dependsOn": [
        "[variables('networkInterfaceName')]",
        "dataDiskLoop",
        "additionalSHDDDataDiskLoop",
        "additionalSSSDDataDiskLoop",
        "additionalPSSDDataDiskLoop",
        "additionalUltraDataDiskLoop"
      ],
      "plan": {
        "name": "byol",
        "publisher": "storone1594045543980",
        "product": "s1os-preview"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "storone1594045543980",
            "offer": "s1os-preview",
            "sku": "byol",
            "version": "latest"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[if(equals(parameters('additionalDataDisk'),'Yes'), variables('totalDataDisks'), variables('intNumberOfDisks'))]",
              "input": {
                "lun": "[concat(0, copyIndex('dataDisks'))]",
                "createOption": "attach",
                "caching": "[if(greaterOrEquals(copyIndex('dataDisks'), variables('totalDataDisks3')), 'None', 'ReadOnly')]",
                "diskSizeGB": null,
                "managedDisk": {
                  "id": "[resourceId('Microsoft.Compute/disks', concat('datadisk', copyIndex('dataDisks')))]",
                  "storageAccountType": "[if(greaterOrEquals(copyIndex('dataDisks'), variables('totalDataDisks3')), 'UltraSSD_LRS', json('null'))]"
                }
              }
            }
          ]
        },
        "additionalCapabilities": {
          "ultraSSDEnabled": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "customData": "[variables('s1relay')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-09-30",
      "name": "[concat('datadisk', copyIndex())]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "[parameters('dataDiskSku')]"
      },
      "copy": {
          "name": "dataDiskLoop",
          "count": "[variables('intNumberOfDisks')]"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "diskSizeGB": "[variables('intDataDiskSize')]"
      }
    },
    {
      "condition": "[variables('standardHDDCheck')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-09-30",
      "name": "[if(equals(variables('standardHDDCheck'), bool('true')), concat('datadisk', add(copyIndex(), variables('intNumberOfDisks'))), 'StandardHDDDisk')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "copy": {
          "name": "additionalSHDDDataDiskLoop",
          "count": "[variables('intadditionalNumberOfSHDDDisks')]"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "diskSizeGB": "[variables('intadditionalSHDDDataDiskSize')]"
      }
    },
    {
      "condition": "[variables('standardSSDCheck')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-09-30",
      "name": "[if(equals(variables('standardSSDCheck'), bool('true')), concat('datadisk', add(copyIndex(), variables('totalDataDisks1'))), 'StandardSSDDisk')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "StandardSSD_LRS"
      },
      "copy": {
          "name": "additionalSSSDDataDiskLoop",
          "count": "[variables('intadditionalNumberOfSSSDDisks')]"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "diskSizeGB": "[variables('intadditionalSSSDDataDiskSize')]"
      }
    },
    {
      "condition": "[variables('premiumSSDCheck')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-09-30",
      "name": "[if(equals(variables('premiumSSDCheck'), bool('true')), concat('datadisk', add(copyIndex(), variables('totalDataDisks2'))), 'PremiumSSDDisk')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "Premium_LRS"
      },
      "copy": {
          "name": "additionalPSSDDataDiskLoop",
          "count": "[variables('intadditionalNumberOfPSSDDisks')]"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "diskSizeGB": "[variables('intadditionalPSSDDataDiskSize')]"
      }
    },
    {
      "condition": "[variables('ultraDiskCheck')]",
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2020-09-30",
      "name": "[if(equals(variables('ultraDiskCheck'), bool('true')), concat('datadisk', add(copyIndex(), variables('totalDataDisks3'))), 'UltraDisk')]",
      "location": "[parameters('location')]",
      "zones": [
        "[variables('zone')]"
      ],
      "sku": {
        "name": "UltraSSD_LRS"
      },
      "copy": {
          "name": "additionalUltraDataDiskLoop",
          "count": "[variables('intadditionalNumberOfUltraDisks')]"
      },
      "properties": {
        "creationData": {
          "createOption": "empty"
        },
        "diskSizeGB": "[variables('intadditionalUltraDataDiskSize')]",
        "diskIOPSReadWrite": "[variables('diskIOPSReadWrite')]",
        "diskMBpsReadWrite": "[if(lessOrEquals(variables('intadditionalUltraDataDiskSize'), 8192), 50, 150)]"
      }
    }
  ],
  "outputs": {
  }
}